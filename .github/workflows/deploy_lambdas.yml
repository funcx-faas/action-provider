name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  #when there is a push to the main
  push:
    branches: [ serverless ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    #installs a version of python, but I need this if deploying to a severless Python Lambda?
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    #credentials to connect to AWS
    - name: Configure AWS credentials from Production account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        profile_name: default
        project_name: FuncXActionProvider
        runtime: python3.7

    - name: Create dependency layer
      run: |
         python -m pip install --upgrade pip
         mkdir python
         #install all dependencies as defined by requirements.txt in the aws directory
         pip3 install --use-deprecated=legacy-resolver  -r aws/requirements.txt -t ./python

         # There is a problem with the parsl library in lambda. We have a slimmed
         # down version to replace it
         rm -Rf python/parsl*
         pip3 install --use-deprecated=legacy-resolver -t python ./slim-parsl

         #zip files into current directory
         zip -r funcxLayer.zip ./python
         aws lambda publish-layer-version --layer-name FuncxLayer --zip-file fileb://./funcxLayer.zip --compatible-runtimes python3.6 python3.7 python3.8 > layer_info.json
         cat layer_info.json
         LAYER_VERSION=$(jq ".Version" layer_info.json)
         LAYER_VERSION_ARN=$(jq ".LayerVersionArn" layer_info.json)

    - name: Upload Globus Auth Function
      run: |
         cp aws/funcx-globus-auth.py ./lambda_function.py
         zip funcx-globus-auth.zip ./lambda_function.py
         rm ./lambda_function.py
         aws lambda update-function-code --function-name funcx-globus-auth --zip-file fileb://./funcx-globus-auth.zip

    - name: Upload Action Introspect Function
      run: |
         cp aws/action_introspect.py ./lambda_function.py
         zip action_introspect.zip ./lambda_function.py
         rm ./lambda_function.py
         aws lambda update-function-code --function-name action_introspect --zip-file fileb://./action_introspect.zip
         aws lambda function-updated --function-name action_introspect
         aws lambda update-function-configuration --function-name action_introspect --layers $LAYER_VERSION_ARN

    - name: Upload Action Run Function
      run: |
         cp aws/funcx-run.py ./lambda_function.py
         zip funcx-run.zip ./lambda_function.py
         rm ./lambda_function.py
         aws lambda update-function-code --function-name funcx-run --zip-file fileb://./funcx-run.zip
         aws lambda function-updated --function-name funcx-run
         aws lambda update-function-configuration --function-name funcx-run --layers $LAYER_VERSION_ARN

    - name: Upload Action Status Function
      run: |
         cp aws/action-status.py ./lambda_function.py
         zip action-status.zip ./lambda_function.py
         rm ./lambda_function.py
         aws lambda update-function-code --function-name action_status --zip-file fileb://./action-status.zip
         aws lambda function-updated --function-name action_status
         aws lambda update-function-configuration --function-name action_status --layers $LAYER_VERSION_ARN

